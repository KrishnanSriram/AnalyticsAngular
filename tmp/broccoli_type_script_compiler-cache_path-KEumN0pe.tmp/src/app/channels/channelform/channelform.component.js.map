{"version":3,"file":"channelform.component.js","sourceRoot":"","sources":["../../../Users/krishnansriramrama/Projects/personal_analytics/Web/WebApp/IBMPAWebApp/tmp/broccoli_type_script_compiler-input_base_path-yUZHHPcH.tmp/0/src/app/channels/channelform/channelform.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnInit, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {NgForm} from \"@angular/forms\";\nimport {Channel} from \"../channel\";\nimport {ChannelService} from \"../services/channel.service\";\n\n@Component({\n  moduleId: module.id,\n  selector: 'pa-channelform',\n  templateUrl: 'channelform.component.html',\n  styles: [`\n    .alert-danger {\n      margin-top: 10px;\n    }\n    .col-xs-6 {\n      margin-left: -11px;\n    }\n    .col-xs-2 {\n      margin-top: 24px;\n    }\n`\n  ]\n})\nexport class ChannelFormComponent implements OnInit, OnChanges {\n\n  @Input() title: string;\n  @Input() submitbuttontitle: string;\n  @Input() formid: string;\n  @Input() channel: Channel;\n\n  private statusChoices: [string] = [\"Open\", \"Closed\"];\n  private updateStatusText: string;\n  private updateStatus: boolean;\n  channelData: Channel = null;\n\n  constructor(private channelService: ChannelService) {\n    this.updateStatusText = \"\";\n  }\n\n  ngOnInit() {\n    console.log('Channelform created with title: ' + this.title);\n    this.payLoad();\n  }\n\n  ngOnChanges(changes:SimpleChanges):void {\n    console.log('Changes - ChannelFormComponent');\n    console.dir(this.channel);\n    this.channelData = this.channel;\n  }\n\n  onSubmit(form: NgForm) {\n    console.log(this.channelData);\n    // check to see if channel has ID on it. If it does then do an update, else add new\n    if(this.channelData._id != null) {\n      this.channelService.updateChannel(this.channelData).subscribe(\n        data => this.addSuccess(form),\n        error =>  this.addFailed(error),\n        () => console.log('update Channel completed.')\n      );\n\n    } else {\n      this.channelService.addNewChannel(this.channelData).subscribe(\n        data => this.addSuccess(form),\n        error =>  this.addFailed(error),\n        () => console.log('addNewChannel completed.')\n      );\n    }\n  }\n\n  addSuccess(form: NgForm) {\n    this.updateStatusText = \"Your changes were updated successfully.\"\n    this.updateStatus = true;\n    console.log('Success - addNewChannel')\n    // form.reset(\"\");\n    // this.payLoad();\n    // should emit an event to channel list component for refresh\n  }\n\n  addFailed(err) {\n    this.updateStatusText = \"Failed to update your changes.\";\n    this.updateStatus = false;\n    console.log(\"ERROR: Failed to add a new channel - \" + err);\n    console.dir(err);\n  }\n\n  onCancel(form: NgForm) {\n    form.reset(\"\")\n    this.payLoad();\n  }\n\n  payLoad() {\n    this.channelData = new Channel('','','', true, 'Open');\n  }\n}\n"]}