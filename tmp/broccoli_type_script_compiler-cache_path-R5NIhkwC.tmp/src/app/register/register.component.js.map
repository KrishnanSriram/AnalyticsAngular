{"version":3,"file":"register.component.js","sourceRoot":"","sources":["../../Users/krishnansriramrama/PrivateProjects/Angular2/personal_analytics_web/tmp/broccoli_type_script_compiler-input_base_path-BtsPIkJ4.tmp/0/src/app/register/register.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkC,eAAe,CAAC,CAAA;AAClD,sBAAsE,gBAAgB,CAAC,CAAA;AAOvF;IA+BE;QA7BA,+BAA0B,GAAG;YAC3B,OAAO,EAAE,wBAAwB;YACjC,UAAU,EAAC,gCAAgC;YAC3C,iBAAiB,EAAE,4CAA4C;YAC/D,WAAW,EAAC,gDAAgD;YAC5D,UAAU,EAAE,kDAAkD;SAC/D,CAAC;QAEF,0BAAqB,GAAG;YACtB,OAAO,EAAE,EAAE;YACX,UAAU,EAAE,EAAE;YACd,iBAAiB,EAAE,EAAE;YACrB,WAAW,EAAE,EAAE;YACf,UAAU,EAAC,EAAE;SACd,CAAC;QAEF,YAAO,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;QAEtC,qBAAgB,GAAG,IAAI,iBAAS,CAAC;YAC7B,KAAK,EAAE,IAAI,mBAAW,CAAC,EAAE,EAAC;gBACxB,kBAAU,CAAC,QAAQ;gBACnB,kBAAU,CAAC,OAAO,CAAC,qEAAqE,CAAC;aAC1F,CAAC;YACF,QAAQ,EAAE,IAAI,mBAAW,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7E,eAAe,EAAE,IAAI,mBAAW,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACpF,SAAS,EAAE,IAAI,mBAAW,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9E,QAAQ,EAAE,IAAI,mBAAW,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAC9E,CAAC,CAAC;IAEW,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IAED,oCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QACpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACnC,qBAAqB;QACrB,EAAE,CAAA,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC;YACjC,QAAQ;YACR,EAAE,CAAA,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC3D,IAAI,CAAC,qBAAqB,CAAC,KAAK,GAAG,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC;YAC3E,CAAC;YACD,UAAU;YACV,EAAE,CAAA,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC9D,IAAI,CAAC,qBAAqB,CAAC,QAAQ,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC;YACjF,CAAC;YACD,kBAAkB;YAClB,EAAE,CAAA,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC;gBACrE,IAAI,CAAC,qBAAqB,CAAC,eAAe,GAAG,IAAI,CAAC,0BAA0B,CAAC,eAAe,CAAC;YAC/F,CAAC;YACD,aAAa;YACb,EAAE,CAAA,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC/D,IAAI,CAAC,qBAAqB,CAAC,SAAS,GAAG,IAAI,CAAC,0BAA0B,CAAC,SAAS,CAAC;YACnF,CAAC;YACD,YAAY;YACZ,EAAE,CAAA,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC9D,IAAI,CAAC,qBAAqB,CAAC,QAAQ,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC;YACjF,CAAC;YAED,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,qBAAqB,CAAC,KAAK,GAAG,EAAE,CAAC;YACtC,IAAI,CAAC,qBAAqB,CAAC,QAAQ,GAAG,EAAE,CAAC;YACzC,IAAI,CAAC,qBAAqB,CAAC,eAAe,GAAG,EAAE,CAAC;YAChD,IAAI,CAAC,qBAAqB,CAAC,SAAS,GAAG,EAAE,CAAC;YAC1C,IAAI,CAAC,qBAAqB,CAAC,QAAQ,GAAG,EAAE,CAAC;QAG3C,CAAC;IACH,CAAC;IA7EH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,cAAc;YACxB,WAAW,EAAE,yBAAyB;SACvC,CAAC;;yBAAA;IA0EF,wBAAC;AAAD,CAAC,AAzED,IAyEC;AAzEY,yBAAiB,oBAyE7B,CAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators, ReactiveFormsModule} from \"@angular/forms\";\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-register',\n  templateUrl: 'register.component.html',\n})\nexport class RegisterComponent implements OnInit {\n\n  REGISTRATION_FORM_ERR_MSGS = {\n    'email': 'Invalid or wrong email',\n    'password':'Please check on password rules',\n    'confirmPassword': 'Password and confirm password don\\'t match',\n    'firstName':'First name should be minimum 3 characters long',\n    'lastName': 'Last name should be of minimum 2 characters long'\n  };\n\n  registrationFormError = {\n    'email': '',\n    'password': '',\n    'confirmPassword': '',\n    'firstName': '',\n    'lastName':''\n  };\n\n  genders = ['Male', 'Female', 'Other'];\n\n  registrationForm = new FormGroup({\n      email: new FormControl('',[\n        Validators.required,\n        Validators.pattern(\"^[a-z0-9]+(\\.[_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,15})$\")\n      ]),\n      password: new FormControl('', [Validators.required, Validators.minLength(8)]),\n      confirmPassword: new FormControl('', [Validators.required, Validators.minLength(8)]),\n      firstName: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      lastName: new FormControl('', [Validators.required, Validators.minLength(2)])\n    });\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    console.log('Submit button tapped');\n    console.dir(this.registrationForm);\n    // Check and validate\n    if(this.registrationForm.invalid) {\n      // email\n      if(this.registrationForm.controls['email'].invalid == true) {\n        this.registrationFormError.email = this.REGISTRATION_FORM_ERR_MSGS.email;\n      }\n      //password\n      if(this.registrationForm.controls['password'].invalid == true) {\n        this.registrationFormError.password = this.REGISTRATION_FORM_ERR_MSGS.password;\n      }\n      //confirm password\n      if(this.registrationForm.controls['confirmPassword'].invalid == true) {\n        this.registrationFormError.confirmPassword = this.REGISTRATION_FORM_ERR_MSGS.confirmPassword;\n      }\n      // first name\n      if(this.registrationForm.controls['firstName'].invalid == true) {\n        this.registrationFormError.firstName = this.REGISTRATION_FORM_ERR_MSGS.firstName;\n      }\n      // last name\n      if(this.registrationForm.controls['lastName'].invalid == true) {\n        this.registrationFormError.lastName = this.REGISTRATION_FORM_ERR_MSGS.lastName;\n      }\n\n      return false;\n    } else {\n      this.registrationFormError.email = '';\n      this.registrationFormError.password = '';\n      this.registrationFormError.confirmPassword = '';\n      this.registrationFormError.firstName = '';\n      this.registrationFormError.lastName = '';\n\n      // Reach out to service\n    }\n  }\n}\n"]}