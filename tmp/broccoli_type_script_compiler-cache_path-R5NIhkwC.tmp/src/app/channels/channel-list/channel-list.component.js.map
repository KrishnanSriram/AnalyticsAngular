{"version":3,"file":"channel-list.component.js","sourceRoot":"","sources":["../../../Users/krishnansriramrama/PrivateProjects/Angular2/personal_analytics_web/tmp/broccoli_type_script_compiler-input_base_path-BtsPIkJ4.tmp/0/src/app/channels/channel-list/channel-list.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAsD,eAAe,CAAC,CAAA;AACtE,kCAAuC,sBAAsB,CAAC,CAAA;AAC9D,wBAAsB,YAAY,CAAC,CAAA;AACnC,4BAAyB,4BAA4B,CAAC,CAAA;AACtD,gCAA6B,6BAA6B,CAAC,CAAA;AAQ3D;IASE,+DAA+D;IAE/D,8BAAoB,UAAsB,EAAU,cAA8B;QAA9D,eAAU,GAAV,UAAU,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAgB;QARxE,oBAAe,GAAG,IAAI,mBAAY,EAAW,CAAC;QAGhD,qBAAgB,GAAG,IAAI,CAAC;QACxB,cAAS,GAAY,KAAK,CAAC;QAKjC,UAAU,CAAC,QAAQ,CAAC,8BAA8B,CAAC,CAAC;QACpD,IAAI,CAAC,sBAAsB,GAAG,oBAAoB,CAAC;QACnD,IAAI,CAAC,8BAA8B,GAAG,cAAc,CAAC;IACvD,CAAC;IAED,uCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAEO,gDAAiB,GAAzB;QAAA,iBAOC;QANC,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE;aAC9B,SAAS,CACR,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,YAAY,GAAG,IAAI,EAAxB,CAAwB,EAChC,UAAA,KAAK,IAAK,OAAA,KAAI,CAAC,gBAAgB,GAAG,KAAK,EAA7B,CAA6B,EACvC,cAAO,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC,CAAC,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC,CAAA,CAAC,CACxE,CAAC;IACN,CAAC;IAED,wCAAS,GAAT;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,yCAAU,GAAV,UAAW,OAAO;QAChB,OAAO,CAAC,GAAG,CAAC,+CAA+C,CAAC,CAAC;QAC7D,IAAI,KAAK,GAAG,iBAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACtC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IArCD;QAAC,aAAM,EAAE;;iEAAA;IATX;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,iBAAiB;YAC3B,WAAW,EAAE,6BAA6B;YAC1C,UAAU,EAAE,CAAC,4CAAwB,CAAC;SACvC,CAAC;;4BAAA;IA2CF,2BAAC;AAAD,CAAC,AA1CD,IA0CC;AA1CY,4BAAoB,uBA0ChC,CAAA","sourcesContent":["import {Component, OnInit, EventEmitter, Output} from '@angular/core';\nimport {ChannelListItemComponent} from \"../channel-list-item\";\nimport {Channel} from \"../channel\";\nimport {LogService} from \"../../services/log.service\";\nimport {ChannelService} from \"../services/channel.service\";\n\n@Component({\n  moduleId: module.id,\n  selector: 'pa-channel-list',\n  templateUrl: 'channel-list.component.html',\n  directives: [ChannelListItemComponent],\n})\nexport class ChannelListComponent implements OnInit {\n\n  channelItems: Channel[];\n  @Output() channelSelected = new EventEmitter<Channel>();\n  private createChannelFormTitle: string;\n  private createChannelSubmitButtonTitle: string;\n  private channelListError = null;\n  private isLoading: boolean = false;\n\n  //TODO: set up a broadcast event that will refresh the contents\n\n  constructor(private logService: LogService, private channelService: ChannelService) {\n    logService.writeLog(\"ChannelListComponent created\");\n    this.createChannelFormTitle = \"Create New Channel\";\n    this.createChannelSubmitButtonTitle = \"Save Channel\";\n  }\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.updateChannelList();\n  }\n\n  private updateChannelList() {\n    this.channelService.getChannels()\n      .subscribe(\n        data => this.channelItems = data,\n        error =>  this.channelListError = error,\n        () => {console.log('getChannels() completed'); this.isLoading = false;}\n      );\n  }\n\n  onRefresh() {\n    this.isLoading = true;\n    this.updateChannelList();\n  }\n\n  onSelected(channel) {\n    console.log('Channel selected event - ChannelListComponent');\n    let model = Channel.fromJSON(channel);\n    this.channelSelected.emit(model);\n  }\n\n}\n"]}