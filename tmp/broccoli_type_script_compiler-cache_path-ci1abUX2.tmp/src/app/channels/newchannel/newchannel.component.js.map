{"version":3,"file":"newchannel.component.js","sourceRoot":"","sources":["../../../Users/krishnansriram/Projects/Javascript/Angular2/AnalyticsAngular/tmp/broccoli_type_script_compiler-input_base_path-l4ywYCmL.tmp/0/src/app/channels/newchannel/newchannel.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnInit, Input, ViewChild, ElementRef, Renderer} from '@angular/core';\nimport {FormBuilder, ReactiveFormsModule, NgForm, FormGroup, Validators} from \"@angular/forms\";\nimport {Channel} from \"../channel\";\nimport {ChannelService} from \"../channelservice.service\";\n\n@Component({\n    moduleId: module.id,\n    selector: 'app-newchannel',\n    templateUrl: 'newchannel.component.html',\n\n})\nexport class NewchannelComponent implements OnInit {\n\n    @Input() formid: string;\n    @Input() formtitle: string;\n    @Input() channel: Channel;\n\n    channelForm: FormGroup;\n    private statusChoices:string[];\n    private addChannelStatus: boolean;\n    private addChannelErrorMessage: string;\n\n    @ViewChild('modalCancelDismiss') modalCancelDismiss: ElementRef;\n\n    constructor(private channelService: ChannelService,private formBuilder: FormBuilder, private renderer: Renderer) {\n        console.log(\"NewChannelDialog instantiated: \" + formBuilder);\n        this.channelForm = formBuilder.group({\n           'name':['', Validators.required],\n            'description':['', Validators.required],\n            'tags': ['', Validators.required],\n            'status':['Open', Validators.required],\n            'start_date':[Channel.todaysDate(), Validators.required],\n            'isPrivate': [true, Validators.required]\n        });\n        this.statusChoices = ['', 'Open', 'Close'];\n        this.addChannelStatus = true;\n    }\n\n    ngOnInit() {\n    }\n\n    onSubmit() {\n        let name = this.channelForm.controls['name'].value;\n        let description = this.channelForm.controls['description'].value;\n        let tags = this.channelForm.controls['tags'].value;\n        let status = this.channelForm.controls['status'].value;\n        let start_date = this.channelForm.controls['start_date'].value;\n        let isPrivate = this.channelForm.controls['isPrivate'].value;\n\n        if(this.channel == null && this.channelForm.valid == true) {\n            this.channel = new Channel(name, description, tags, isPrivate, status);\n            // save new channel\n            this.channelService.addNewChannel(this.channel).subscribe(\n                (data) => this.addSuccess(data),\n                (err) => this.handleServiceError(err),\n                () => console.log('Completed addNewChannel service request')\n            );\n        } else {\n            // update existing channel\n\n        }\n    }\n\n    addSuccess(data) {\n        this.addChannelStatus= true;\n        this.channelForm.reset('')\n        this.channel = null;\n        let event = new MouseEvent('click', {bubbles: true});\n        this.renderer.invokeElementMethod(this.modalCancelDismiss.nativeElement, 'dispatchEvent', [event]);\n        // Fire an event to refresh button in Channels component\n    }\n\n    handleServiceError(err) {\n        this.addChannelStatus = false;\n        this.addChannelErrorMessage = 'Failed to add channel. Please try again later. ' + err.description;\n    }\n\n}\n"]}